card:
  show_state: true
  state_display: >
    [[[
      var state = entity ? entity.state : null;

      return state
        ? `${state.charAt(0).toUpperCase()}${state.slice(1)}`
        : null;
    ]]]
  variables:
    color: "yellow"
  tap_action:
    action: toggle
  double_tap_action:
    action: more-info
  hold_action:
    action: more-info
  styles:
    grid:
      - grid-template-columns: 38px fit-content(100%)
      - grid-template-areas: |
          "i n"
          "i s"
      - grid-template-rows: 19px 19px
      - column-gap: 8px
      - row-gap: 0px
    card:
      - background: var(--sidebar-background-color)
      - box-sizing: border-box
      - box-shadow: none
      - border-radius: 8px
      - padding: 12px
      - margin-bottom: 8px
    img_cell:
      - border-radius: 4px
      - background-color: >
          [[[
            if (entity.state !== 'off') {
              var color_set = entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.color;
              var color = `rgba(var(--color-${color_set}), 0.15)`;

              if (entity.attributes.rgb_color) {
                color = `rgba(${color_set}, 0.15)`;
              }

              return color;
            }

            return `var(--sidebar-border-color)`;
          ]]]
      - display: flex
      - align-items: center
      - justify-content: center
      - flex-shrink: 0
      - height: 38px
      - width: 38px
      - transition: background-color 350ms ease-in-out
    icon:
      - display: flex
      - align-items: center
      - justify-content: center
      - height: 24px
      - width: 24px
      - color: >
          [[[
            if (entity.state !== 'off') {
              var color_set = entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.color;
              var color = `rgba(var(--color-${color_set}), 1)`;

              if (entity.attributes.rgb_color) {
                color = `rgba(${color_set}, 1)`;
              }

              return color;
            }

            return `var(--secondary-text-color)`;
          ]]]
      - transition: color 350ms ease-in-out
    name:
      - font-weight: 600
      - font-size: 14px
      - text-align: left
    state:
      - font-weight: 600
      - font-size: 12px
      - color: var(--secondary-text-color)
      - text-align: left
      - width: 100%

card_contact_sensor:
  template:
    - card
  state_display: >
    [[[
      return entity && entity.state === 'on'
        ? "Open"
        : "Closed"
    ]]]

card_power_outlet:
  variables:
    power_outlet_icon: '[[[ return entity.attributes.icon ]]]'
    power_outlet_name: '[[[ return entity.attributes.friendly_name ]]]'
    power_outlet_consumption_sensor:
  state:
    - operator: "template"
      value: "test"
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: '[[[ return entity.entity_id ]]]'
              icon: '[[[ return variables.power_outlet_icon ]]]'
          item2:
            card:
              type: "custom:button-card"
              entity: '[[[ return entity.entity_id ]]]'
              name: '[[[ return variables.power_outlet_name ]]]'
              label: |-
                [[[
                  if (entity.state === 'on' && variables.power_outlet_consumption_sensor !== null) {
                    return `${entity.state} â€¢ ${variables.power_outlet_consumption_sensor}`;
                  } else {
                    return entity.state;
                  }
                ]]]
  # state_display: >
  #   [[[
  #     var state = entity ? entity.state : null;

  #     return state
  #       ? `${state.charAt(0).toUpperCase()}${state.slice(1)}`
  #       : null;
  #   ]]]
