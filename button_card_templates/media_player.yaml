base_media_player:
  variables:
    media_on: >
      [[[ return !entity || ['playing'].indexOf(entity.state) !== -1; ]]]
    media_off: >
      [[[ return !entity || ['off', 'idle', 'standby', 'unknown', 'unavailable', 'paused'].indexOf(entity.state) !== -1; ]]]

reset_media_player_style:
  styles:
    card:
      - background: transparent
      - padding: 0
      - box-shadow: none
      - border-radius: 0

artwork_media_player:
  show_name: false
  show_state: false
  show_icon: >
    [[[
      if (entity && variables.entity_picture) {
        return false;
      } else {
        return true;
      }
    ]]]
  template:
    - base
    - reset_media_player_style
  styles:
    grid:
      - display: flex
      - align-items: center
      - justify-content: center
    card:
      # - background-color: var(--primary-background-color)
      - background-image: >
          [[[
            console.log(variables.entity_picture)
            console.log(entity)
            let entity_picture = entity === undefined || entity.attributes.entity_picture;

            console.log(entity_picture)
            if (entity_picture) {
              let picture = entity_picture.replace('{w}x{h}{c}.{f}', '300x300bb.jpg');

              if (entity_picture.includes('cache=https://')) {
                picture = picture.split('cache=').pop();
              }

              console.log(picture);
              return `url('${picture}')`;
            } else {
              return 'none';
            }
          ]]]
      - background-color: var(--sidebar-border-color)
      - background-size: cover
      - background-position: center
      - background-repeat: none
      - height: 96px
      - width: 96px
      - border-radius: 8px
      - box-shadow: none
      - border: 1px solid rgba(0, 0, 0, .25)
      - box-sizing: border-box
    icon:
      - color: var(--secondary-text-color)
      - opacity: >
          [[[
            if (variables.entity_picture) {
              return '0'
            }

            return '0.5';
          ]]]

info_media_player:
  show_name: false
  show_state: false
  show_icon: false
  triggers_update: "all"
  styles:
    grid:
      - display: flex
      - flex-direction: column
      - align-items: flex-start
      - gap: 2px
    card:
      - background: transparent
      - padding: 0
      - box-shadow: none
      - border-radius: 0
  custom_fields:
    media_title:
      card:
        type: "custom:button-card"
        template: reset_media_player_style
        show_icon: false
        show_state: false
        styles:
          name:
            - font-family: var(--primary-font-family)
            - font-size: 16px
            - font-weight: 600
            - color: var(--primary-text-color)
            - padding-left: 2px
        entity: >
          [[[ return entity.entity_id ]]]
        name: >
          [[[ return entity && entity.attributes.media_title ]]]
    media_artist:
      card:
        type: "custom:button-card"
        template: reset_media_player_style
        show_icon: false
        show_state: false
        styles:
          name:
            - font-family: var(--primary-font-family)
            - font-size: 14px
            - font-weight: 500
            - color: var(--secondary-text-color)
            - padding-left: 2px
        entity: >
          [[[ return entity.entity_id ]]]
        name: >
          [[[ return entity && entity.attributes.media_artist ]]]
    media_source:
      card:
        type: "custom:button-card"
        template: reset_media_player_style
        show_icon: true
        show_state: false
        styles:
          grid:
            - display: flex
            - gap: 6px
            - justify-content: center
            - align-items: center
          img_cell:
            - display: flex
            - align-items: center
            - justify-content: center
            - height: 24px
            - width: 24px
          icon:
            - display: flex
            - align-items: center
            - justify-content: center
            - color: var(--secondary-text-color)
            - height: 20px
            - width: 20px
          name:
            - font-family: var(--primary-font-family)
            - font-size: 10px
            - font-weight: 600
            - letter-spacing: .5px
            - line-height: 24px
            - align-self: center
            - color: var(--secondary-text-color)
            - text-transform: uppercase
          card:
            - margin-top: 4px
        entity: >
          [[[ return entity.entity_id ]]]

metadata_media_player:
  show_name: false
  show_state: false
  show_icon: false
  triggers_update: "all"
  tap_action:
    action: none
  styles:
    grid:
      - display: flex
      - gap: 16px
    card:
      - background: transparent
      - padding: 0
      - box-shadow: none
      - border-radius: 0
  custom_fields:
    artwork:
      card:
        type: "custom:button-card"
        template: artwork_media_player
        # variables:
        #   entity_picture: >
        #     [[[ return states[entity.entity_id].attributes.entity_picture ]]]
    info:
      card:
        type: "custom:button-card"
        template: info_media_player
        entity: >
          [[[ return entity.entity_id ]]]

controls_button_media_player:
  triggers_update: "all"
  show_name: false
  show_state: false
  show_icon: true
  tap_action:
    action: toggle
  styles:
    grid:
      - display: flex
      - align-items: center
      - justify-content: center
    card:
      - background: transparent
      - box-shadow: none
      - padding: 0px
      - height: 48px
      - width: 48px
      - pointer-events: initial !important
    icon:
      - height: 32px
      - width: 32px

controls_media_player:
  template:
    - base
    - base_media_player
    - reset_media_player_style
  show_icon: false
  show_name: false
  show_state: false
  triggers_update: "all"
  tap_action:
    action: call-service
    service: media_player.media_play_pause
    service_data:
      entity_id: >
        [[[ return variables.entity_id; ]]]
  styles:
    grid:
      - display: flex
      - align-items: center
      - justify-content: center
      - gap: 10px
      - padding: 10px
    card:
      - background: transparent
      - box-shadow: none
      - padding: 0px
  custom_fields:
    previous:
      card:
        type: "custom:button-card"
        template:
          - controls_button_media_player
        icon: mdi:skip-previous
        show_name: false
        show_state: false
        tap_action:
          action: call-service
          service: media_player.media_previous_track
          service_data:
            entity_id: >
              [[[ return entity.entity_id ]]]
    play_pause:
      card:
        type: "custom:button-card"
        template:
          - base
          - base_media_player
          - controls_button_media_player
        icon: >
          [[[
            return entity && variables.media_on
              ? 'mdi:pause'
              : 'mdi:play-outline'
          ]]]
        show_name: false
        show_state: false
        tap_action:
          action: call-service
          service: media_player.media_play_pause
          service_data:
            entity_id: >
              [[[ return entity.entity_id ]]]
    next:
      card:
        type: "custom:button-card"
        template:
          - controls_button_media_player
        icon: mdi:skip-next
        show_name: false
        show_state: false
        tap_action:
          action: call-service
          service: media_player.media_next_track
          service_data:
            entity_id: >
              [[[ return entity.entity_id ]]]

extra_controls_media_player:
  tap_action:
    action: toggle
  template:
    - base
    - base_media_player
    - reset_media_player_style
  show_icon: false
  show_name: false
  show_state: false
  triggers_update: "all"
  styles:
    grid:
      - display: flex
      - align-items: center
      - justify-content: flex-end
      - gap: 10px
      - padding: 10px
    card:
      - background: transparent
      - box-shadow: none
      - padding: 0px
  custom_fields:
    shuffle:
      card:
        type: "custom:button-card"
        template:
          - controls_button_media_player
        icon: mdi:repeat
        show_name: false
        show_state: false
        tap_action:
          action: call-service
          service: media_player.repeat_set
          service_data:
            entity_id: >
              [[[ return entity.entity_id ]]]
    repeat:
      card:
        type: "custom:button-card"
        template:
          - base
          - base_media_player
          - controls_button_media_player
        icon: mdi:shuffle-variant
        show_name: false
        show_state: false
        tap_action:
          action: call-service
          service: media_player.shuffle_set
          service_data:
            entity_id: >
              [[[ return entity.entity_id ]]]

conditional_media_player:
  template:
    - base
    - base_media_player
  show_name: false
  show_state: false
  show_icon: false
  triggers_update: "all"
  tap_action:
    action: none
  styles:
    grid:
      - box-sizing: border-box
      - grid-template-areas: |
          "metadata controls extra_controls"
      - grid-template-columns: 1fr 1fr 1fr
      - gap: 10px
      - align-items: center
      - justify-content: center
      - max-height: 120px
      - padding: 12px
    card:
      - background: var(--sidebar-background-color)
      - border-top: 1px solid var(--sidebar-border-color)
      - border-radius: 0px
      - box-sizing: border-box
      - box-shadow: none
      - display: flex
      - align-items: center
      - justify-content: center
      - max-height: 120px
      - padding: 0px
    img_cell:
      - display: none
    icon:
      - display: none
    name:
      - display: none
    state:
      - display: none
  custom_fields:
    metadata:
      card:
        type: "custom:button-card"
        entity: >
          [[[ return entity.entity_id ]]]
        variables:
          entity_picture: sensor.active_media_players
        template:
          - metadata_media_player
    controls:
      card:
        type: "custom:button-card"
        entity: >
          [[[ return entity.entity_id ]]]
        template:
          - controls_media_player
    extra_controls:
      card:
        type: "custom:button-card"
        entity: >
          [[[ return entity.entity_id ]]]
        template:
          - extra_controls_media_player
